<%
var caramel;
require('/modules/publisher.js').exec(function (ctx) {
    var log = new Log('Server_passwords');
    var req = require('utils').request;
    caramel = require('caramel');
    var asset = require('rxt').asset;
    var gregAPI = require('/modules/greg-publisher-api.js').gregAPI;

    var ui = require('rxt').ui;
    var page = ui.buildPage(ctx.session, ctx.request);
    var options = req.getQueryOptions(ctx.request.getQueryString());

    if (!options.type) {
        ctx.response.sendError(404, 'Unable to locate the asset without a valid Type');
        return;
    }
    var am = asset.createUserAssetManager(ctx.session, options.type);
    var output = am.render(page)._custom();


    var key = req.getParameter('key');
    var value = req.getParameter('value');
    var result;


        try {
            var properties = gregAPI.password.addNewPassword(ctx.session, options.type,  key, value);

            var Gson = Packages.com.google.gson.Gson;
            var gson = new Gson();
            var result = gson.toJson(properties);
            try {
                result = parse(String(result));
            } catch (e) {
                log.error(e);
            }
        } catch (e) {
            log.error(e);
        }



        var passwordArray = [];
        for (var key in result) {
                var pairs = {};
                pairs.key = key;
                pairs.value = result[key];
                passwordArray.push(pairs);
        }



    output.passwords = passwordArray;
    caramel.render(output);
}, request, response, session); %>